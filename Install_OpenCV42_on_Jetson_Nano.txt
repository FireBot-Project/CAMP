1. The terminal command to check which OpenCV version you have on your computer is:
	python -c 'import cv2; print(cv2.__version__)'
	sudo sh -c "echo '/usr/local/cuda/lib64' >> /etc/ld.so.conf.d/nvidia-tegra.conf"

2. Create the links and caching to the shared libraries
	sudo ldconfig
	
3. Install the relevant third party libraries. 
	sudo apt-get install -y build-essential cmake git unzip pkg-config
	sudo apt-get install -y libjpeg-dev libpng-dev libtiff-dev
	sudo apt-get install -y libavcodec-dev libavformat-dev libswscale-dev
	sudo apt-get install -y libgtk2.0-dev libcanberra-gtk*
	sudo apt-get install -y python3-dev python3-numpy python3-pip
	sudo apt-get install -y libxvidcore-dev libx264-dev libgtk-3-dev
	sudo apt-get install -y libtbb2 libtbb-dev libdc1394-22-dev
	sudo apt-get install -y libv4l-dev v4l-utils
	sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
	sudo apt-get install -y libavresample-dev libvorbis-dev libxine2-dev
	sudo apt-get install -y libfaac-dev libmp3lame-dev libtheora-dev
	sudo apt-get install -y libopencore-amrnb-dev libopencore-amrwb-dev
	sudo apt-get install -y libopenblas-dev libatlas-base-dev libblas-dev
	sudo apt-get install -y liblapack-dev libeigen3-dev gfortran
	sudo apt-get install -y libhdf5-dev protobuf-compiler
	sudo apt-get install -y libprotobuf-dev libgoogle-glog-dev libgflags-dev
	
4. Install OpenCV
	cd ~
	wget -O opencv.zip https://github.com/opencv/opencv/archive/4.5.1.zip
	wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.5.1.zip
	unzip opencv.zip
	unzip opencv_contrib.zip

6. Now rename the directories
	mv opencv-4.5.1 opencv
	mv opencv_contrib-4.5.1 opencv_contrib
	rm opencv.zip
	rm opencv_contrib.zip

7. Build the OpenCV files
	cd ~/opencv
	mkdir build
	cd build
	
8. Set the compilation directives - You can copy and paste this entire block of commands below into your terminal.
cmake -D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr \
-D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \
-D EIGEN_INCLUDE_PATH=/usr/include/eigen3 \
-D WITH_OPENCL=OFF \
-D WITH_CUDA=ON \
-D CUDA_ARCH_BIN=5.3 \
-D CUDA_ARCH_PTX="" \
-D WITH_CUDNN=ON \
-D WITH_CUBLAS=ON \
-D ENABLE_FAST_MATH=ON \
-D CUDA_FAST_MATH=ON \
-D OPENCV_DNN_CUDA=ON \
-D ENABLE_NEON=ON \
-D WITH_QT=OFF \
-D WITH_OPENMP=ON \
-D WITH_OPENGL=ON \
-D BUILD_TIFF=ON \
-D WITH_FFMPEG=ON \
-D WITH_GSTREAMER=ON \
-D WITH_TBB=ON \
-D BUILD_TBB=ON \
-D BUILD_TESTS=OFF \
-D WITH_EIGEN=ON \
-D WITH_V4L=ON \
-D WITH_LIBV4L=ON \
-D OPENCV_ENABLE_NONFREE=ON \
-D INSTALL_C_EXAMPLES=OFF \
-D INSTALL_PYTHON_EXAMPLES=OFF \
-D BUILD_NEW_PYTHON_SUPPORT=ON \
-D BUILD_opencv_python3=TRUE \
-D OPENCV_GENERATE_PKGCONFIG=ON \
-D BUILD_EXAMPLES=OFF ..

9. Build OpenCV.
	make -j4
	
10. If the building process stops before it reaches 100%, repeat the cmake command, and run the ‘make -j4’ command again.

11. Finish the install.
	cd ~
	sudo rm -r /usr/include/opencv4/opencv2
	cd ~/opencv/build
	sudo make install
	sudo ldconfig
	make clean
	sudo apt-get update
	
12. Let’s verify that everything is working correctly.
	python3

13. Check OpenCV version
import cv2
cv2.__version__
exit()
	
14. Delete the original OpenCV and OpenCV_Contrib folders.
	sudo rm -rf ~/opencv
	sudo rm -rf ~/opencv_contrib

15. Install jtop, a system monitoring software for Jetson Nano.
	cd ~
	sudo -H pip3 install -U jetson-stats

16. Reboot your machine.
	sudo reboot
	jtop

Press q to quit.
Verify the installation of OpenCV one last time.
	python3

check if the following shows:
import cv2
cv2.__version__
exit()


Reference:
https://qengineering.eu/install-opencv-4.5-on-jetson-nano.html
